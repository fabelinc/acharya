"""Recreate with UUID consistency

Revision ID: 3a8350d0dd72
Revises: 
Create Date: 2025-06-17 00:52:35.556362

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '3a8350d0dd72'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('assignments',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('subject', sa.String(), nullable=False),
    sa.Column('question_count', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('active_assignments',
    sa.Column('session_id', sa.String(), nullable=False),
    sa.Column('assignment_id', sa.UUID(), nullable=False),
    sa.Column('teacher_id', sa.String(), nullable=False),
    sa.Column('activated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['assignment_id'], ['assignments.id'], ),
    sa.PrimaryKeyConstraint('session_id')
    )
    op.create_index(op.f('ix_active_assignments_session_id'), 'active_assignments', ['session_id'], unique=False)
    op.create_table('assignment_questions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('assignment_id', sa.UUID(), nullable=False),
    sa.Column('text', sa.Text(), nullable=False),
    sa.Column('answer', sa.Text(), nullable=False),
    sa.Column('explanation', sa.Text(), nullable=True),
    sa.Column('type', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['assignment_id'], ['assignments.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_assignment_questions_id'), 'assignment_questions', ['id'], unique=False)
    op.create_table('probing_questions',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('question_id', sa.UUID(), nullable=False),
    sa.Column('text', sa.Text(), nullable=False),
    sa.Column('hint', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['question_id'], ['assignment_questions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_probing_questions_id'), 'probing_questions', ['id'], unique=False)
    op.create_table('student_submissions',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('session_id', sa.String(), nullable=False),
    sa.Column('student_id', sa.String(), nullable=False),
    sa.Column('score', sa.Integer(), nullable=False),
    sa.Column('answers_json', sa.Text(), nullable=False),
    sa.Column('interactions_json', sa.Text(), nullable=True),
    sa.Column('time_spent_json', sa.Text(), nullable=True),
    sa.Column('submitted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['session_id'], ['active_assignments.session_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_student_submissions_id'), 'student_submissions', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_student_submissions_id'), table_name='student_submissions')
    op.drop_table('student_submissions')
    op.drop_index(op.f('ix_probing_questions_id'), table_name='probing_questions')
    op.drop_table('probing_questions')
    op.drop_index(op.f('ix_assignment_questions_id'), table_name='assignment_questions')
    op.drop_table('assignment_questions')
    op.drop_index(op.f('ix_active_assignments_session_id'), table_name='active_assignments')
    op.drop_table('active_assignments')
    op.drop_table('assignments')
    # ### end Alembic commands ###
